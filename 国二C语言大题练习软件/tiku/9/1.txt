给定程序中,函数fun的功能是将不带头节点的单向链表结点数据域中的数据从小到大排序。即若原链表结点数据域从头至尾的数据为：10、4、2、8、6，排序后链表结点数据域从头至尾的数据为：2、4、6、8、10。 
请在程序的下划线处填入正确的内容并把下划线删除, 使程序得出正确的结果。 
注意：源程序存放在考生文件夹下的BLANK1.C中。 
不得增行或删行，也不得更改程序的结构！ 
给定源程序： 
#include <stdio.h> 
#include <stdlib.h> 

#define N 6 

typedef struct node
{ 
	int data; 
	struct node *next; 
} NODE;

void fun(NODE *h) 
{
	NODE *p, *q; int t; 
	p = h; 
	while (p)
	{ 
		/**********found**********/ 
		q = __1__ ; 
		/**********found**********/ 
		while (__2__) 
		{
			if (p->data > q->data) 
			{
				t = p->data;
				p->data = q->data;
				q->data = t;
			} 
			q = q->next; 
		} 
		/**********found**********/ 
		p = __3__ ; 
	} 
} 

NODE *creatlist(int a[]) 
{
	NODE *h,*p,*q; int i; 
	h=NULL; 
	for(i=0; i<N; i++) 
	{
		q=(NODE *)malloc(sizeof(NODE)); 
		q->data=a[i]; 
		q->next = NULL; 
		if (h == NULL)
			h = p = q; 
		else 
		{
			p->next = q;
			p = q;
		} 
	} 
	return h; 
} 

void outlist(NODE *h) 
{
	NODE *p; 
	p=h; 
	if (p==NULL)
		printf("The list is NULL!\n"); 
	else 
	{
		printf("\nHead "); 
		do 
		{
			printf("->%d", p->data);
			p=p->next;
		}while(p!=NULL); 
		printf("->End\n"); 
	} 
} 

main() 
{
	NODE *head; 
	int a[N]= {0, 10, 4, 2, 8, 6 }; 
	head=creatlist(a); 
	printf("\nThe original list:\n"); 
	outlist(head); 
	fun(head); 
	printf("\nThe list after inverting :\n"); 
	outlist(head); 
} 
解题思路： 
本题是考察使用链表方法，使用两重while循环语句，对链表的结点数据进行升序排列。 
第一处：由于外循环变量使用p指针，内循环变量使用q指针，所以q指向必须指向p的next指针，因此应填写：p.next。 
第二处：判断内循环q指针是否结束，所以应填：q。 
第三处：外循环控制变量p指向自己的next指针，所以应填：p.next。 